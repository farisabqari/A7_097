package com.example.myapplicationujian.ui.ViewModel.pasienViewModel

import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.example.myapplicationujian.Model.Pasien
import com.example.myapplicationujian.Repository.PasienRepository
import kotlinx.coroutines.launch

class InsertPasienViewModel(private val pasienRepository: PasienRepository) : ViewModel() {
    var uiState by mutableStateOf(InsertPasienUiState())
        private set

    fun updateInsertPasienState(insertUiEvent: InsertPasienUiEvent) {
        uiState = InsertPasienUiState(insertUiEvent = insertUiEvent)
    }

    fun insertPasien() {
        viewModelScope.launch {
            try {
                pasienRepository.insertPasien(uiState.insertUiEvent.toPasien())
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }
    }
}

data class InsertPasienUiState(
    val insertUiEvent: InsertPasienUiEvent = InsertPasienUiEvent()
)

data class InsertPasienUiEvent(
    val idPasien: Int = 0, // Default to 0, since ID may be auto-generated by the server
    val namaPasien: String = "",
    val alamat: String = "",
    val nomorTelepon: String = "",
    val tanggalLahir: String = "",
    val riwayatMedikal: String = ""
)

fun InsertPasienUiEvent.toPasien(): Pasien = Pasien(
    id_pasien = idPasien,
    nama_pasien = namaPasien,
    alamat = alamat,
    nomor_telepon = nomorTelepon,
    tanggal_lahir = tanggalLahir,
    riwayat_medikal = riwayatMedikal
)

fun Pasien.toUiStatePasien(): InsertPasienUiState = InsertPasienUiState(
    insertUiEvent = toInsertUiEvent()
)

fun Pasien.toInsertUiEvent(): InsertPasienUiEvent = InsertPasienUiEvent(
    idPasien = id_pasien,
    namaPasien = nama_pasien,
    alamat = alamat,
    nomorTelepon = nomor_telepon,
    tanggalLahir = tanggal_lahir,
    riwayatMedikal = riwayat_medikal
)